
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@using MyBlog.Services

@inject IBlogImageService _imageService
@model IPagedList<Post>


@{

    ViewData["Title"] = "Landing Page";
}


<!-- Main Content-->
<div class="container">
    <div class="col-lg-8 col-md-10 mx-auto">
        @foreach (var blog in Model)
        {
            <div class="post-preview">
                <div class="row">
                    <div class="col">
                        <div class="row">
                            <div class="col">
                                <img class="img-fluid" src="@_imageService.DecodeImage(blog.ImageData, blog.ContentType)" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <a class="btn btn-dark btn-block btn-sm" asp-controller="Posts" asp-action="BlogPostIndex" asp-route-id="@blog.Id">Read Posts</a>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <a href="post.html">
                            <h2 class="post-title">@blog.Title</h2>
                            <h3 class="post-subtitle">@blog.Abstract</h3>
                        </a>
                        <p class="post-meta">
                            Posted by Leo Barnuevo on @blog.Created.ToString("MMM dd, yyyy")
                        </p>
                        @if (User.IsInRole("Administrator"))
                        {
                            <a class="btn-sm btn-dark btn-block" asp-action="Create" asp-controller="Posts" asp-route-blogId="@blog.Id">Create Post</a>
                        }
                    </div>
                </div>
            </div>
            <hr />
        }

        <!-- Pager-->
        <div class="clearfix"><a class="btn btn-primary float-right" href="#!">Older Posts →</a></div>
    </div>

</div>

<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }), 
        new PagedListRenderOptions
        {
            LiElementClasses = new string[]{"page-item"},
            PageClasses = new string[]{"page-link"}

        })
    </div>
</div>

